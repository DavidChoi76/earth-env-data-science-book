version: 2
jobs:
  deploy:
    docker:
      - image: circleci/python:3.6-stretch
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      # Add deployment key fingerprint for CircleCI to use for a push
      - add_ssh_keys:
          fingerprints:
            - "2f:40:72:72:6a:d5:43:08:1e:42:a4:30:03:e3:f1:05"

      - run:
          name: Check out target repo and replace content
          command: |
            git clone git@github.com:earth-env-data-science/earth-env-data-science.github.io.git target
            cd target
            rm -rf *
            cp -r /tmp/workspace/_site/* .
            touch .nojekyll

      - run:
          name: Commit results and push to gh-pages
          command: |
            git config --global user.name "circleci"
            git add -A
            git commit -m "jekyll book web deploy"
            git push -f origin master

  build_html:
    docker:
      - image: circleci/ruby:2.6
    steps:
      # Attach the built markdown files
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      # Grab the the built markdown from the last step
      - run:
          name: Copy over built site files
          command: |
            rm -rf ./_build
            cp -r /tmp/workspace/_build ./

      # Build the site's HTML w/ the base_url for CircleCI artifacts
      - checkout
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "./Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run: gem install bundler
      - run: bundle install

      # Store bundle cache
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "./Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Build the website
          command: bundle exec jekyll build

      - persist_to_workspace:
          root: .
          paths:
            - ./_site/

  build_markdown:
    docker:
      - image: circleci/python:3.6-stretch
    steps:
      # Get our data and merge with upstream
      - run: sudo apt-get update
      - checkout
      # Update our path
      - run: echo "export PATH=~/.local/bin:$PATH" >> $BASH_ENV
      # Restore cached files to speed things up
      - restore_cache:
          keys:
            - cache-pip

      # Install the packages needed to build our documentation
      # This will depend on your particular package!
      - run: pip install --user jupyter-book

      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: cache-pip
          paths:
            - ~/.cache/pip

      - run:
          name: Build site markdown
          command: jupyter-book build .

      # Persist the specified paths (see https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs)
      - persist_to_workspace:
          root: .
          paths:
            - ./_build/


# Tell CircleCI to use this workflow when it builds the site
workflows:
  version: 2.0
  default:
    jobs:
      - build_markdown
      - build_html:
          requires:
            - build_markdown
      - deploy:
          requires:
            - build_html
          filters:
            branches:
              only:
                - master
